package eu.chorevolution.vsb.bcs.dtsgoogle.bc;

import java.util.ArrayList;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebService;
import eu.chorevolution.vsb.gm.protocols.builders.ResponseBuilder;
import eu.chorevolution.vsb.gm.protocols.primitives.BcGmComponent;
import eu.chorevolution.vsb.gmdl.utils.Data;

import org.restlet.Client;
import org.restlet.Request;
import org.restlet.data.Method;
import org.restlet.data.Protocol;
import org.restlet.representation.StringRepresentation;


/**
 * This class was generated by the CHOReVOLUTION BindingComponent Generator
 * using com.sun.codemodel 2.6
 * 
 */
@WebService(serviceName = "BindingComponent", targetNamespace = "")
public class BindingComponent {

	private final BcGmComponent apiRef;
	private Client client;
	private String uri;

	public BindingComponent(BcGmComponent apiRef) {
		this.apiRef = apiRef;

		this.client = new Client(Protocol.HTTP);
		this.uri = "http://127.0.0.1:8585/getmessage";
	}

	@WebMethod
	public RootClass routeRequest(String origin, String destination) {
		List<Data<?>> datas = new ArrayList<Data<?>>();
		datas.add(new Data<String>("origin", "String", true, origin, "PATH"));
		datas.add(new Data<String>("destination", "String", true, destination, "PATH"));
//		datas.add(new Data<String>("key", "String", true, key, "PATH"));
		
//		String request = "Request to REST for parameters:  " + "origin: " + origin + " and destination: " + destination;
//    
//    Request restRequest = new Request(Method.POST, this.uri, new StringRepresentation(request));
//    this.client.handle(restRequest);
//    System.out.println(request);
    
		java.lang.String serializedrootClass = this.apiRef.mgetTwowaySync("/maps/api/directions/json?origin={origin}&destination={destination}&key=AIzaSyBhfNR1PHo8EsuxjLr3EO-sNnfoUDh4ilw", datas);
		
//		String response = "Response from REST: " + serializedrootClass;
//    restRequest = new Request(Method.POST, this.uri, new StringRepresentation(response));
//    this.client.handle(restRequest);
//    System.out.println(response);
		System.out.println(ResponseBuilder.unmarshalObject("application/json", serializedrootClass, RootClass.class));
		return ResponseBuilder.unmarshalObject("application/json", serializedrootClass, RootClass.class);
	}

}
